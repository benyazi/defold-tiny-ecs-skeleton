-- require 'lib.require'
Tiny = require 'lib.tiny'

-- Entities = require.tree('src.entities')
-- Systems = require.tree('src.systems')

Systems = {
	TargetToMouse = require 'src.systems.TargetToMouse'
}

Entities = {
	TestEntity = require 'src.entities.TestEntity'
}

World = Tiny.world(Systems.TargetToMouse)

MousePosition = vmath.vector3(0, 0, 0)
--  create system filters
local drawFilter = Tiny.requireAll('isDrawSystem')
local drawGuiFilter = Tiny.requireAll('isDrawGuiSystem')
local updateFilter = Tiny.rejectAny('isDrawSystem','isDrawGuiSystem')

function init(self)
	msg.post(".", "acquire_input_focus")
	local objId = factory.create("#TestObjFactory", vmath.vector3(0, 0, 0))
	World:addEntity(Entities.TestEntity.new(objId, 100))
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	World:update(dt,updateFilter)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	MousePosition.x = action.x
	MousePosition.y = action.y
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
